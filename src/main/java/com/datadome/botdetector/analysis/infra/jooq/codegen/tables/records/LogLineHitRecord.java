/*
 * This file is generated by jOOQ.
 */
package com.datadome.botdetector.analysis.infra.jooq.codegen.tables.records;


import com.datadome.botdetector.analysis.infra.jooq.codegen.tables.JooqLogLineHit;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogLineHitRecord extends UpdatableRecordImpl<LogLineHitRecord> implements Record2<String, OffsetDateTime> {

    private static final long serialVersionUID = 1599590229;

    /**
     * Setter for <code>PUBLIC.LOG_LINE_HIT.IP</code>.
     */
    public void setIp(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.LOG_LINE_HIT.IP</code>.
     */
    public String getIp() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.LOG_LINE_HIT.DATE</code>.
     */
    public void setDate(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.LOG_LINE_HIT.DATE</code>.
     */
    public OffsetDateTime getDate() {
        return (OffsetDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, OffsetDateTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, OffsetDateTime> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return JooqLogLineHit.T_LOG_LINE_HIT.IP;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return JooqLogLineHit.T_LOG_LINE_HIT.DATE;
    }

    @Override
    public String component1() {
        return getIp();
    }

    @Override
    public OffsetDateTime component2() {
        return getDate();
    }

    @Override
    public String value1() {
        return getIp();
    }

    @Override
    public OffsetDateTime value2() {
        return getDate();
    }

    @Override
    public LogLineHitRecord value1(String value) {
        setIp(value);
        return this;
    }

    @Override
    public LogLineHitRecord value2(OffsetDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public LogLineHitRecord values(String value1, OffsetDateTime value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogLineHitRecord
     */
    public LogLineHitRecord() {
        super(JooqLogLineHit.T_LOG_LINE_HIT);
    }

    /**
     * Create a detached, initialised LogLineHitRecord
     */
    public LogLineHitRecord(String ip, OffsetDateTime date) {
        super(JooqLogLineHit.T_LOG_LINE_HIT);

        set(0, ip);
        set(1, date);
    }
}
